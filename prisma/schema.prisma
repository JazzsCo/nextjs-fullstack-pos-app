generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addon_cats {
  id                Int                 @id @default(autoincrement())
  addon_cat_name    String
  is_required       Boolean             @default(true)
  is_archived  Boolean   @default(false)
  addons_addon_cats addons_addon_cats[]
  menus_addon_cats  menus_addon_cats[]
}

model addons {
  id                Int                 @id @default(autoincrement())
  addon_name        String
  price             Int
  is_available      Boolean             @default(true)
  is_archived  Boolean   @default(false)
  addons_addon_cats addons_addon_cats[]
}

model addons_addon_cats {
  id           Int        @id @default(autoincrement())
  addon_id     Int
  addon_cat_id Int
  addon_cats   addon_cats @relation(fields: [addon_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  addons       addons     @relation(fields: [addon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model locations {
  id                                   Int               @id @default(autoincrement())
  location_name                        String
  address                              String?
  is_archived  Boolean   @default(false)
  menus_menu_cats_addon_cats_locations menus_locations[]
  tables                               tables[]
}

model menu_cats {
  id              Int               @id @default(autoincrement())
  menu_cat_name   String
  is_archived  Boolean   @default(false)
  menus_menu_cats menus_menu_cats[]
}

model menus_locations {
  id           Int        @id @default(autoincrement())
  menu_id      Int
  location_id  Int?
  is_available Boolean?   @default(true)
  locations    locations? @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menus        menus      @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menus_menu_cats {
  id          Int       @id @default(autoincrement())
  menu_id     Int
  menu_cat_id Int
  menus       menus     @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menu_cats   menu_cats @relation(fields: [menu_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menus {
  id                                   Int                @id @default(autoincrement())
  name                                 String
  price                                Int
  image_url                            String
  is_archived  Boolean   @default(false)
  menus_menu_cats_addon_cats_locations menus_locations[]
  menus_addon_cats                     menus_addon_cats[]
  menus_menu_cats                      menus_menu_cats[]
}

model menus_addon_cats {
  id           Int        @id @default(autoincrement())
  menu_id      Int
  addon_cat_id Int
  menus        menus      @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  addon_cats   addon_cats @relation(fields: [addon_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tables {
  id           Int       @id @default(autoincrement())
  name         String
  table_url    String?
  locations_id Int
  is_archived  Boolean   @default(false)
  locations    locations @relation(fields: [locations_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
